#!/usr/bin/env perl
use strict;
use warnings;
use Cwd;
use File::Spec;
use System::Command;
use Git::Repository;
use Test::Git;
use Getopt::Long;
use Encode;
use utf8;

# command-line options
my %option = ( bundle => 'test.bundle' );
GetOptions( \%option, 'verbose', 'gitk', 'bundle=s', 'force' )
    or die "Usage: $0 [ --verbose ] [ --gitk ]\n";

$option{bundle} = File::Spec->rel2abs( $option{bundle} );

# check if we have a recent enough git
my $version = Git::Repository->version;
die "git version 1.7.8 need for commit -S, this is only $version\n"
    if Git::Repository->version_lt( '1.7.8' );

# check if gpg is available
my $gpg = eval { System::Command->new(qw( gpg --version ))->stdout->getline }
    or die "gpg not found in the path\n";

# setup our local GnuPG environment
$ENV{GNUPGHOME} = File::Spec->catfile( getcwd(), 'gnupg' );
my $keyid = '7621C403';

# setup a test repository
my $r = test_repository( git => { quiet => 1 } );
my $tick = time - 3600;
$ENV{GIT_AUTHOR_DATE}    = sprintf "%d +0200", $tick;
$ENV{GIT_COMMITTER_DATE} = sprintf "%d +0200", $tick + 3600;
$ENV{GIT_AUTHOR_NAME}  = $ENV{GIT_COMMITTER_NAME}  = 'Philippe Bruhat (BooK)';
$ENV{GIT_AUTHOR_EMAIL} = $ENV{GIT_COMMITTER_EMAIL} = 'book@cpan.org';

### helper subs

# put content in a file, with an optional encoding
sub update_file {
    my ( $file, $content, $encoding ) = @_;
    $encoding ||= 'UTF-8';
    open my $fh, ">:encoding($encoding)", $file or die "Can't open $file: $!";
    print {$fh} $content;
    close $fh;
}

# enable the verbose option
my %seen;
sub tick {
    $tick++;
    $ENV{GIT_AUTHOR_DATE} = "$tick +0200";
    return if !$option{verbose};
    my ($HEAD) = $r->run( log => '--pretty=format:%H' );
    return if $seen{$HEAD}++;
    print "---- $HEAD ", '-' x 32, "\n";
    print "$_\n" for $r->run( qw( cat-file commit ), $HEAD );
    print "\n";
}

### main program

my ( $head, $tree, $cmd );

my $hello = File::Spec->catfile( $r->work_tree => 'file.txt' );

# empty tree
$tree = $r->run( mktree => { input => '' } );
$head = $r->run( 'commit-tree', $tree, -m => 'empty tree' );
$r->run( 'update-ref', 'refs/heads/master' => $head );
tick;

# simple commit
update_file( $hello => "Hello\n" );
$r->run( add    => $hello );
$r->run( commit => -m => 'hello (en)' );
tick;
$head = $r->run( log => '--pretty=format:%H' );

# make a latin-1 branch
$r->run( branch => 'latin-1' );

# commit with utf8 blob and message
update_file( $hello => "こんにちは\n" );
$r->run( commit => -am => 'こんにちは (ja)' );
tick;

# gpgsig
update_file( $hello => "hej\n" );
$r->run( add    => $hello );
$r->run( commit => "-S$keyid" => -m => 'hej (da)' );
tick;

# encoding
$r->run( checkout => 'latin-1' );
$r->run( config => qw( i18n.commitencoding iso-8859-1 ) );
update_file( $hello => 'halló' );
$cmd = $r->command( commit => '-aF-' );
print { $cmd->stdin } encode( 'iso-8859-1', 'halló (is)' );
$cmd->close;
tick;

# signed tag
$r->run( tag => -m => 'signed tag', -u => $keyid, -s => 'v1.0.0' );
tick;

# encoding
update_file( $hello => 'góður dagur' );
$r->run( add => $hello );
$cmd = $r->command( commit => '-aF-' );
print { $cmd->stdin } encode( 'iso-8859-1', 'góður dagur (is)' );
$cmd->close;
tick;

# signed tag
$r->run( tag => -m => 'signed tag', -u => $keyid, -s => 'v1.0.1' );
tick;

# gpgsig + encoding
update_file( $hello => 'olá', 'iso-8859-1' );
$cmd = $r->command( commit => '-aF-' => "-S$keyid" );
print { $cmd->stdin } encode( 'iso-8859-1', 'olá (pt)' );
$cmd->close;
tick;

$r->run( config => qw( --unset i18n.commitencoding iso-8859-1 ) );

# signed tag
$r->run( tag => -m => 'signed tag', -u => $keyid, -s => 'v1.0.2' );
tick;

# some basic commit
update_file( $hello => 'bonjour' );
$r->run( add => $hello );
$r->run( commit => -m => 'bonjour (fr)' );
tick;

# signed tag
$r->run( tag => -m => 'signed tag', -u => $keyid, -s => 'v1.0.3' );
tick;

# mergetag
$r->run( checkout => 'master' );
$r->run( merge => -s => 'ours', 'v1.0.0' );
tick;

# mergetag + encoding
$r->run( config => qw( i18n.commitencoding iso-8859-1 ) );
$r->run( merge => -s => 'ours', '--no-commit', 'v1.0.1' );
$cmd = $r->command( commit => '-F-' );
print { $cmd->stdin } encode( 'iso-8859-1', 'dobrý den (cs)' );
$cmd->close;
tick;

$r->run( config => qw( --unset i18n.commitencoding iso-8859-1 ) );

# mergetag + gpgsig
$r->run( merge => -s => 'ours', '--no-commit', 'v1.0.2' );
$r->run( commit => -am => 'bom dia', "-S$keyid" );
tick;

# mergetag + gpgsig + encoding
$r->run( config => qw( i18n.commitencoding iso-8859-1 ) );
$r->run( merge => -s => 'ours', '--no-commit', 'v1.0.3' );
$cmd = $r->command( commit => '-aF-' => "-S$keyid" );
print { $cmd->stdin } encode( 'iso-8859-1', 'buen día (es)' );
$cmd->close;
tick;

$r->run( config => qw( --unset i18n.commitencoding iso-8859-1 ) );

### final steps

# gitk
if( $option{gitk} ) {
    my $home = getcwd();
    chdir $r->work_tree;
    `gitk --all --date-order`;
    chdir $home;
}

# bundle
if( !-e $option{bundle} || $option{force} ) {
    $r->run( bundle => create => $option{bundle} => '--all' );
}
